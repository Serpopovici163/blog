I"+#<p>UPDATE: I’m nearly done schematics and hope to order this PCB soon. I’m also working on a PCB for the transceiver computer that connects the car’s CAN network to my own and I will finish both before I send off the order.</p>

<h2 id="lightlink-module-overview">LightLink Module Overview</h2>

<p>Control of a vehicle’s external lighting is safety critical, so I’ve settled on designing a fully-redundant custom circuit board with 12 MOSFET-driven channels to handle ‘dumb’ lights and 8 addressable channels to handle a set of addressable LED arrays retrofitted throughout the vehicle.</p>

<p>The primary challenge with designing a redundant board for this application is the required use of P-channel MOSFETs and the limited analog I/O available on the Arduino Mega I am using for control. P-channel MOSFETs are required since the car’s chassis is a system-wide ground that all components always have access to and we must therefore toggle the high side of a circuit to turn it on and off. This is an issue because P-channel MOSFETs need their gates to be driven low in order to turn on but the MOSFET would operate off of the car battery whereas the driving circuit would be operating at a much lower logic-level voltage. Therefore, an intermediary N-channel MOSFET must be used to drive the P-channel from a logic-level signal.</p>

<p>This board has gone through many design iterations with the first being as described <a href="https://circuitjournal.com/how-to-use-a-p-channel-mosfet-with-an-arduino">here</a>. I initially wanted to solely use P-channel MOSFETs to decrease the number of components but this seemed like a bad idea so, in the end, I decided to settle for a more traditional design. The final design includes the intermediary N-channel MOSFETs to drive the P-channels and is described more in depth below.</p>

<h3 id="redundant-mosfet-schematic">Redundant MOSFET Schematic</h3>

<p><img src="/assets/img/brz/mosfet_schematic.PNG" alt="MOSFET schematic" /></p>

<p>Two MOSFETs (top left) are included in parallel, both of which are immediately followed by a Schottky diode to prevent backflow from the other MOSFET. This is necessary because a diagnostic pin is included prior to the Schottky to sense the voltage at the output of each MOSFET which would be biased by backflow from the other MOSFET therefore hindering the detection of a MOSFET failure. The diagnostic connections use LM324D-based comparators to compare the voltage before the Schottky to the voltage following the Schottky. If the voltage prior to the diode falls below the voltage following the diode, the output of the LM324D swings low. This is by design since I am using digital pins for sensing MOSFET failures and digital pins can be set up as inputs with pull-up resistors in the Arduino meaning that the pin should go low when a failure occurs.</p>

<p>In addition to detecting individual MOSFET failures, the circuit includes a shunt at the MOSFET output. This allows the board to detect a short circuit or burnt light bulb based on the current being drawn from the circuit. I am using 4-op-amp ICs for this circuit and have therefore included a voltage follower on the near-side of the shunt since I had the extra op amp. I’m not sure if this makes sense but I wanted to ensure the op amp does not influence the near side of the shunt which may throw off the current sensing.</p>

<p>OVERALL SCHEMATIC</p>

<p>For control, two Arduino Mega EMBEDs are included. These were chosen because I have about a dozen on hand right now and they have been reliable in my experience. At any given moment, one of the Arduinos is considered the ‘master’. The master is in charge of outputting signals to the MOSFET and addressable channels while simoultaneously communicating its state over to the slave Arduino over a UART connection. The master updates the slave at regular intervals such that the updates themselves function as ‘heartbeat’ signals ensuring the slave that the master is operating normally. Should the master miss a heartbeat for whatever reason, the slave sends a hardware reset signal to the master after which it assumes the master role and resumes signal outputs based on the last state update it received.</p>

<p>Each arduino has separate a separate CAN controller and transceiver. I am using the MCP2515 controller alongside the TCAN1043DQ1 transceiver. The MCP2515 is a well known controller and therefore has many libraries available and the TCAN1043DQ1 controller was chosen because it has the ability to ‘wake on CAN’. The TCAN1043DQ1 has a separate power pin that does not require an external regulator and allows it to monitor for activity on the CAN bus. Once activity is detected, it sets the INH pin high which turns on the LightLink. This provides an incredibly low-power solution to ensure this device cannot drain the vehicle’s battery.</p>

<h2 id="light-modifications">Light Modifications</h2>

<p>The LightLink module will be installed under the steering column, next to the car’s body control module which provides it with immediate access to all of the car’s stock lighting wiring. I may have to run some extra wires for things like my brake and running lights since the running lights, for example, probably have a single wire connecting them to the body control module but I want the ability to toggle both independently. The only lights that will remain controlled by the body control module are the third brake light and the headlight highbeams; everything else will be handled by the LightLink module.</p>

<h3 id="license-plate-leds">License Plate LEDs</h3>

<p><img src="/assets/img/brz/license_plate_LED_CAD.png" alt="License Plate LED CAD" style="float: right; width:40%; height:80%;" />
There wasn’t much of a reason to redo these, the light bulbs were perfectly adequate but I figured I might as well add more RGB. These mounts are currently flawed since the LEDs got incredibly hot and managed to melt the ABS so they are currently only partially supported by what’s left of the plastic bracket. The current CAD is pictured to the right. I’m going to fix this by mounting the LEDs onto some sort of metal piece, likely some sheet metal cut to size, such that they can better dissipate the heat the generate. From there, the ABS mount will solely come in contact with the sheet metal and not the LED. I’m hoping this will provide enough insulation to prevent the ABS from melting again.</p>

<h3 id="side-markers">Side Markers</h3>

<p>The following may be useful to other people hoping to get custom side markers for their BRZ. I managed to lose one of mine while driving and it got run over before I had the chance to go retrieve it off the side of the road.
<img src="/assets/img/brz/side_marker_CAD.png" alt="Side marker CAD" style="float: right; width:30%; height:80%;" />
As it turns out, it is in fact cheaper to buy high power addressable RGB LEDs and 3D-print two custom side markers than it is to obtain a single OEM one so I naturally chose that route. The CAD to the right shows the final iteration of the side marker which houses a 9W RGB LED. No space is provided for the LED’s driver board as it will be housed on the inside of the bumper. I’m not sure if this design is functional. I did a similar thing for the license plate LEDs, as explained in the section above, and may redo this design to avoid having the ABS melt. The picture below provides an idea of how the LED would currently fit in the design.</p>

<p><img src="/assets/img/brz/side_marker_LED_test_fit.jpg" alt="Side marker LED test fit" style="width:50%; display:block; margin-left: auto; margin-right: auto;" /></p>

<h3 id="fourth-brake-light-width420-height315">Fourth Brake Light width=”420” height=”315”</h3>

<iframe style="float: right; width:50%; height:500" src="/assets/img/brz/fourth_brake_light_video.mp4" frameborder="0" allowfullscreen="allowfullscreen">&nbsp;</iframe>
<p>![][{/assets/img/brz/fourth_brake_light_video.mp4}]
This was a fun one. The stock fourth brake light only contains two bulbs that turn on when the vehicle is in reverse. The plastic housing of the light quite literally has a spot dedicated to having a light bulb behind the red lens but none is included from the factory. I knew I was going to add a fourth brake light to the car and decided that I might as well add RGB to the two reverse light compartments as well. I don’t seem to have any pictures of the modified fourth brake light though I do have this video where I had programmed it to flash red and blue. The assembly process was rather simple, I cut some holes in the fourth brake light casing with my soldering iron that were just large enough for the portion of the LED that lights up. I then screwed the LEDs into the plastic of the fourth brake light using the two mounting holes they have and lathered the completed thing with high temp hot glue. I’ve had this running for quite a while now and it has yet to fail.</p>
:ET